name: Model REST API CI/CD Pipeline


# Trigger logic
on:
  # Triggered by pushes to the main branch related to the Model microservice (notebooks excluded)
  push:
    branches:
      - main
    paths:
      - 'model/**'
      - '!model/notebooks/**'
  # Manual trigger for debug
  workflow_dispatch:


# Default work directory
defaults:
  run:
    working-directory: ./model


# CI and CD jobs
jobs:
  # CI Pipeline
  # 2. Lints the Dockerfile with Hadolint
  lint_docker:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Run Hadolint on Dockerfile
      - name: Run Hadolint
        run: |
          wget -O hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          chmod +x hadolint
          ./hadolint --config ../.hadolint.yml Dockerfile

  # 2. Build Docker image
  docker_build_push:
    # Ensures lint_docker completes successfully before running
    needs:  lint_docker
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Build the image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.repository }}-model:latest .

      # Log in to GH Container Registry
      - name: Log in to GitHub Container Registry
        if: |
          (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Push the image to the Container Registry
      - name: Push Docker image
        if: |
          (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository }}-model:latest


  # CD Pipeline
  # 1. Triggers re-deploy on the hosted server
  deploy:
    # Ensure docker_build_push completes successfully before running
    needs: docker_build_push
    runs-on: ubuntu-latest

    steps:
      # Avoid specifying working dir for each job/step
      - name: Checkout code
        uses: actions/checkout@v2
        
      # Trigger re-deploy
      - name: Trigger Deploy on Render
        if: |
          (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: |
          curl -X POST "${{ secrets.HOMELENS_CA_MODEL_DEPLOY_HOOK }}"
